CREATE TABLE IF NOT EXISTS users (
    username VARCHAR(255) PRIMARY KEY NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(1000) NOT NULL,
    uploads_id INTEGER DEFAULT NULL,
    location VARCHAR(1000) DEFAULT NULL,
    study VARCHAR(1000) DEFAULT NULL,
    bio VARCHAR(1000) DEFAULT NULL,
    creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_edit_date TIMESTAMP DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS posts (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    body VARCHAR(1000) NOT NULL,
    title VARCHAR(1000) DEFAULT NULL,
    username VARCHAR(255) NOT NULL,
    FOREIGN KEY (username) REFERENCES users(username),
    creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_edit_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS friends (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL,
    FOREIGN KEY (username) REFERENCES users(username),
    friend VARCHAR(255) NOT NULL,
    request_sent INT NOT NULL DEFAULT 0,
    request_accepted INT NOT NULL DEFAULT 0,
    request_delete INT NOT NULL DEFAULT 0,
    FOREIGN KEY (friend) REFERENCES users(username),
    creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_edit_date TIMESTAMP DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS uploads (
    id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
    filename VARCHAR(1000) NOT NULL,
    location VARCHAR(1000) NOT NULL,
    filesize INTEGER NOT NULL,
    type VARCHAR(1000) NOT NULL,
    sha256 VARCHAR(64) NOT NULL,
    creation_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    last_edit_date TIMESTAMP DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP
);
